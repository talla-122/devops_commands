###### Installation of nexus ######

sudo yum update -y        -----------------> updates the os    
java -version        ----------->check whether java is there or not in machine
sudo yum whatprovides java        -------------> gives all the versions of java of different platforms
sudo yum install java-1.8.0-amazon-corretto -y        ---------------> suitable for amazon linux server
ls
java -version
sudo yum install wget -y        --------------> wget software is needed first to download and install maven
sudo wget https://download.sonatype.com/nexus/3/nexus-3.63.0-01-unix.tar.gz -P /tmp/        -----------> copied link address from google------> downloads sonatype nexus tar file in tmp folder
ls -l /tmp/
sudo tar xvzf /tmp/nexus-3.63.0-01-unix.tar.gz -C /opt/        ------------> extracts tar file and stores the nexus in opt folder
sudo mv /opt/nexus-3.63.0-01-unix.tar.gz/ /opt/nexus        -------------> renaming was done to nexus for better readabilty
ls -l /opt/
ls -l /etc/
ls -l /etc/profile.d/
ls -l /etc/profile.d/maven.sh        -----------------> created new maven.sh file in profile.d folder
sudo vi /etc/profile.d/maven.sh      -----------------> adding two lines of code in vi editor for this file . That is 
                                                        export M2_HOME=/opt/maven
                                                        export PATH=${M2_HOME}/bin:${PATH}
                                                        the above two lines are written inside the editor
                                                        
ls -l /etc/profile.d/maven.sh
sudo chmod +x /etc/profile.d/maven.sh        ---------------> to access maven from everywhere . Not only from opt/maven/
ls -l /etc/profile.d/maven.sh
sudo vi /etc/profile.d/maven.sh
source /etc/profile.d/maven.sh
mvn -version
sudo rm -f /tmp/apache-maven-3.9.6-bin.tar.gz        -------------> once we successfully downloaded and installed and running maven , we don't require tar file of maven

**************************************************maven installation completed****************************************************************************

******test case******
### cloning a remote repository and getting the .war or .jar file in the target folder which needs to be sent to webserver(tomcat server) in the future
git -version
sudo yum install git -y      
git --version
git clone https://github.com/talla-122/maven-web-app.git  
cd maven-web-app/
ls -l /target/
mvn clean package        -------------------> this command will delete the previous .war or .jar files and target folder. And created new .war or .jar files and target folder in one go
